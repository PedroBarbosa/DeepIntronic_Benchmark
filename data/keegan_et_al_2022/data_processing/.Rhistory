setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022/data_processing")
setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022/data_processing")
library(readr)
library(readr)
library(readr)
library(dplyr)
all_data_with_flag <- read_tsv('1_processed_data.tsv')
all_data_with_flag
used_data <- read_tsv('../keegan_2022_tabular.tsv')
used_data
all_data_with_flag
colnames(all_data_with_flag)
all_data_with_flag$hgvs
library(readxl)
library(readxl)
library(readxl)
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022")
data <- read_xlsx('0_supp_tables.xlsx', sheet = 1, skip= 1) %>% select(c(ID,
Gene,
Intron,
Size,
`Transcript ID`,
`Instigating mutation(s)`,
`Mutation type`,
`RNA source`))
setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022/data_processing/")
data <- read_xlsx('0_supp_tables.xlsx', sheet = 1, skip= 1) %>% select(c(ID,
Gene,
Intron,
Size,
`Transcript ID`,
`Instigating mutation(s)`,
`Mutation type`,
`RNA source`))
data
names(data) <- tolower(names(data))
names(data) <- tolower(names(data))
names(data) <- tolower(names(data))
data <- data %>% rename(tx_id = `transcript id`,
mutation = `instigating mutation(s)`,
mutation_type = `mutation type`,
rna_source = `rna source`)
# Melt variants triggering the same pseudoexons
data <- data %>% mutate(mutation = strsplit(mutation, "; ")) %>% unnest(mutation)
# Remove variants with rsIDs with low condifence
rsIDs_to_remove <- c("rs2014886", "rs2545162", "rs2075356")
data <- filter(data, !grepl(paste(rsIDs_to_remove, collapse="|"), mutation))
# Remove spaces from mutation column
data$mutation <- sapply(strsplit(data$mutation, "\\s+"), "[", 1)
# Select rows where mutation starts with c.*
data <- data %>% filter(str_detect(mutation, "^c."))
# Generate HGVSc
data$hgvs <- paste0(data$tx_id, ":", data$mutation)
# Remove ENCO and DIST3/5 anf tricky mutations
data <- data %>% filter(mutation_type != "ENCO" & mutation_type != "DIST3/5")
data <- data %>% filter(id != "PMS2-7-1")
data <- data %>% filter(mutation != "c.1390-12_1390-13insL1(6044)")
# Remove ENCO and DIST3/5 and tricky mutations
data <- data %>% filter(mutation_type != "ENCO" & mutation_type != "DIST3/5")
# Remove ENCO and DIST3/5 and tricky mutations
data <- data %>% filter(mutation_type != "ENCO" & mutation_type != "DIST3/5")
# Remove ENCO and DIST3/5 and tricky mutations
data <- data %>% filter(mutation_type != "ENCO" & mutation_type != "DIST3/5")
data <- data %>% filter(id != "PMS2-7-1")
data <- data %>% filter(mutation != "c.1390-12_1390-13insL1(6044)")
# Change type of composite mutation cases
# (HADH-5-1) A-SNP + D-SNV
data[data$mutation == "c.636+385A>G",]$mutation_type <- 'A-SNP'
data[data$mutation == "c.636+471G>T",]$mutation_type <- 'D-SNV'
# (NTRK1-8-1a) D-SNV + M-SNV
data[data$mutation == "c.851-794C>G",]$mutation_type <- 'D-SNV'
data[data$mutation == "c.851-798C>T",]$mutation_type <- 'M-SNV'
# (DMD-2-3) M-OTH
data[data$mutation == "c.94-78858C>G",]$mutation_type <- 'M-SNV'
data[data$mutation == "c.94-78836T>G",]$mutation_type <- 'M-SNV'
# Simplify mutation types
map_dict <- c('A-OTH'='new_splice_acceptor',
'A-SNP'='new_splice_acceptor',
'A-SNV'='new_splice_acceptor',
'D-OTH'='new_splice_donor',
'D-SNP'='new_splice_donor',
'D-SNV'='new_splice_donor',
'DIST3'='strengthening_donor',
'DIST5'='strengthening_acceptor',
'BPD'='branchpoint_related',
'M-OTH'='change_sre',
'M-SNV'='change_sre',
'M-SNP'='change_sre')
data <- data %>%
mutate(mutation_flag = recode(mutation_type, !!!map_dict, .default = NA_character_))
data %>% count(mutation_type)
# Write output
data %>% write_tsv(file='1_processed_data.tsv')
write.csv(unique(data$hgvs), file="1_hgvs.txt", row.names=F, quote = F)
library(readr)
library(dplyr)
all_data_with_flag <- read_tsv('1_processed_data.tsv')
used_data <- read_tsv('../keegan_2022_tabular.tsv')
colnames(all_data_with_flag)
left_join(used_data, selec(all_data_with_flag, c(hgvs,mutation_flag), by=ID=hgvs)
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag), by=ID=hgvs))
?left_join
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag), by = c(ID=hgvs))
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c(ID=hgvs))
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c(ID=hgvs))
select(all_data_with_flag, c(hgvs,mutation_flag))
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c(ID=hgvs))
used_data
left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c("ID"="hgvs"))
joined <- left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c("ID"="hgvs"))
view(joiend)
view(joined)
View(joined)
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022/data_processing/")
data <- read_xlsx('0_supp_tables.xlsx', sheet = 1, skip= 1) %>% select(c(ID,
Gene,
Intron,
Size,
`Transcript ID`,
`Instigating mutation(s)`,
`Mutation type`,
`RNA source`))
names(data) <- tolower(names(data))
data <- data %>% rename(tx_id = `transcript id`,
mutation = `instigating mutation(s)`,
mutation_type = `mutation type`,
rna_source = `rna source`)
# Melt variants triggering the same pseudoexons
data <- data %>% mutate(mutation = strsplit(mutation, "; ")) %>% unnest(mutation)
# Remove variants with rsIDs with low condifence
rsIDs_to_remove <- c("rs2014886", "rs2545162", "rs2075356")
data <- filter(data, !grepl(paste(rsIDs_to_remove, collapse="|"), mutation))
# Remove spaces from mutation column
data$mutation <- sapply(strsplit(data$mutation, "\\s+"), "[", 1)
# Select rows where mutation starts with c.*
data <- data %>% filter(str_detect(mutation, "^c."))
# Generate HGVSc
data$hgvs <- paste0(data$tx_id, ":", data$mutation)
# Remove ENCO and DIST3/5 and tricky mutations
data <- data %>% filter(mutation_type != "ENCO" & mutation_type != "DIST3/5")
data <- data %>% filter(id != "PMS2-7-1")
data <- data %>% filter(mutation != "c.1390-12_1390-13insL1(6044)")
# Change type of composite mutation cases
# (HADH-5-1) A-SNP + D-SNV
data[data$mutation == "c.636+385A>G",]$mutation_type <- 'A-SNP'
data[data$mutation == "c.636+471G>T",]$mutation_type <- 'D-SNV'
# (NTRK1-8-1a) D-SNV + M-SNV
data[data$mutation == "c.851-794C>G",]$mutation_type <- 'D-SNV'
data[data$mutation == "c.851-798C>T",]$mutation_type <- 'M-SNV'
# (DMD-2-3) M-OTH
data[data$mutation == "c.94-78858C>G",]$mutation_type <- 'M-SNV'
data[data$mutation == "c.94-78836T>G",]$mutation_type <- 'M-SNV'
# Simplify mutation types
map_dict <- c('A-OTH'='new_splice_acceptor',
'A-SNP'='new_splice_acceptor',
'A-SNV'='new_splice_acceptor',
'D-OTH'='new_splice_donor',
'D-SNP'='new_splice_donor',
'D-SNV'='new_splice_donor',
'DIST3'='strengthening_donor',
'DIST5'='strengthening_acceptor',
'BPD'='branchpoint_related',
'M-OTH'='change_sre',
'M-SNV'='change_sre',
'M-SNP'='change_sre')
data <- data %>%
mutate(mutation_flag = recode(mutation_type, !!!map_dict, .default = NA_character_))
data %>% count(mutation_type)
# Write output
data %>% write_tsv(file='1_processed_data.tsv')
write.csv(unique(data$hgvs), file="1_hgvs.txt", row.names=F, quote = F)
library(readr)
library(dplyr)
setwd("~/git_repos/paper_intronic_benchmark/data/keegan_et_al_2022/data_processing")
all_data_with_flag <- read_tsv('1_processed_data.tsv')
used_data <- read_tsv('../keegan_2022_tabular.tsv')
joined <- left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c("ID"="hgvs"))
view(joiend)
view(joinrd)
view(joined)
View(joined)
joined %>% write_tsv(file='../keegan_2022_tabular.tsv', col_names =  T)
all_data_with_flag <- read_tsv('1_processed_data.tsv')
used_data <- read_tsv('../keegan_2022_tabular.tsv') %>% select(-mutation_flag)
used_data
View(used_data)
joined <- left_join(used_data, select(all_data_with_flag, c(hgvs,mutation_flag)), by = c("ID"="hgvs")) %>% distinct()
joined %>% write_tsv(file='../keegan_2022_tabular.tsv', col_names =  T)
