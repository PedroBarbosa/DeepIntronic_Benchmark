geom_point(data = diffTable[eventsOI,],
color = "black",
fill = NA,
shape = 21) +
# xlab(expression(abs(Delta*PSI[Brain-Muscle]))) +
xlab(expression(PSI[Brain]-PSI[Muscle])) +
ylab("Probability of differential splicing") +
labs(caption = paste0(nrow(filteredPsis), " exon skipping (SE) events")) +
theme(text = element_text(size = 20))
# Study the "outliers" of the volcano
ggplot(data = diffTable,
aes(x = deltaBrainToMuscle,
y = Pdiff,
color = deltaPSI)) +
geom_point() +
geom_abline(intercept = c(0.5, 0.5),
slope = c(-1, 1)) +
scale_color_gradient2(name = expression(Delta*PSI),
low = muscle_color,
mid = "gray",
high = brain_color) +
geom_point(data = examples,
color = "black",
fill = NA,
shape = 21) +
# xlab(expression(abs(Delta*PSI[Brain-Muscle]))) +
xlab(expression(PSI[Brain]-PSI[Muscle])) +
ylab("Probability of differential splicing") +
labs(caption = paste0(nrow(filteredPsis), " exon skipping (SE) events"))
examples <- rownames(diffTable[which((diffTable$Pdiff<diffTable$deltaBrainToMuscle+0.5 | diffTable$Pdiff < -diffTable$deltaBrainToMuscle+0.5) &
diffTable$Pdiff > 0.7 & diffTable$Pdiff < 1),])
extreme_examples <- rownames(diffTable[which((diffTable$Pdiff < -diffTable$deltaBrainToMuscle+0.5) &
diffTable$Pdiff > 0.7 & diffTable$Pdiff < 0.9),])
# Study the "outliers" of the volcano
ggplot(data = diffTable,
aes(x = deltaBrainToMuscle,
y = Pdiff,
color = deltaPSI)) +
geom_point() +
geom_abline(intercept = c(0.5, 0.5),
slope = c(-1, 1)) +
scale_color_gradient2(name = expression(Delta*PSI),
low = muscle_color,
mid = "gray",
high = brain_color) +
geom_point(data = examples,
color = "black",
fill = NA,
shape = 21) +
# xlab(expression(abs(Delta*PSI[Brain-Muscle]))) +
xlab(expression(PSI[Brain]-PSI[Muscle])) +
ylab("Probability of differential splicing") +
labs(caption = paste0(nrow(filteredPsis), " exon skipping (SE) events"))
examples <- rownames(diffTable[which((diffTable$Pdiff<diffTable$deltaBrainToMuscle+0.5 | diffTable$Pdiff < -diffTable$deltaBrainToMuscle+0.5) &
diffTable$Pdiff > 0.7 & diffTable$Pdiff < 1),])
extreme_examples <- rownames(diffTable[which((diffTable$Pdiff < -diffTable$deltaBrainToMuscle+0.5) &
diffTable$Pdiff > 0.7 & diffTable$Pdiff < 0.9),])
# Select a random event to plot from the subset of "events of interest" and "examples"
i <- sample(which(rownames(filteredPsis) %in% c(eventsOI, extreme_examples)), size = 1)
# ::::::::::::::::::::::::::
volcanoInd <- ggplot(data = diffTable,
aes(x = deltaBrainToMuscle,
y = Pdiff,
color = deltaPSI)) +
geom_point(show.legend = FALSE,
alpha = 0.5) +
scale_color_gradient2(name = expression(Delta*PSI),
low = muscle_color,
mid = "gray",
high = brain_color) +
geom_point(data = diffTable[i,],
color = "black") +
xlab(expression(PSI[Brain]-PSI[Muscle])) +
ylab("Probability of differential splicing") +
labs(title = rownames(diffTable)[i])
psistoPlot <- melt(filteredPsis[i,])
psistoPlot$tissue <- GTEx_BrainMuscle$GTEx$`Sample metadata`$`Tissue Type (area of retrieval)`[match(psistoPlot$variable,
rownames(GTEx_BrainMuscle$GTEx$`Sample metadata`))]
psistoPlot$subtissue <- GTEx_BrainMuscle$GTEx$`Sample metadata`$`Tissue Type (detail)`[match(psistoPlot$variable,
rownames(GTEx_BrainMuscle$GTEx$`Sample metadata`))]
usedSamples <- c(unique(names(gtexBetas[[i]][[4]])), unique(names(gtexBetas[[i]][[5]])))
sample      <- psistoPlot[match(usedSamples, psistoPlot$variable),]
plotPsis <- ggplot(data = psistoPlot,
aes(x = tissue,
y = value,
group = tissue,
color = tissue,
fill = tissue)) +
geom_violin(show.legend = FALSE,
alpha = 0.5) +
geom_jitter(alpha = 0.2,
show.legend = FALSE) +
geom_jitter(data = sample,
color = "black",
fill = "black",
show.legend = FALSE) +
scale_fill_manual(values = c(brain_color, muscle_color)) +
scale_color_manual(values = c(brain_color, muscle_color)) +
xlab("tissue") +
ylab("PSI") +
theme(plot.title = element_text(size = 8),
axis.title.x = element_blank()) +
stat_compare_means(data = sample,
method = "kruskal.test",
label.y = 1,
show.legend = FALSE)
artif1 <- gtexBetas[[i]][[4]]
artif2 <- gtexBetas[[i]][[5]]
median1 <- gtexBetas[[i]][[1]]
median2 <- gtexBetas[[i]][[2]]
pbrain <- ggplot() +
geom_jitter(aes(x = factor(names(artif1)),
y = as.numeric(as.vector(artif1))),
alpha = 0.2,
color = brain_color,
fill = brain_color) +
geom_hline(yintercept = median1,
color = brain_color) +
xlab("") +
scale_y_continuous(limits = c(0,1),
breaks = seq(0,1,0.25)) +
theme(axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.y = element_blank())
pmuscle <- ggplot() +
geom_jitter(aes(x = factor(names(artif2)),
y = as.numeric(as.vector(artif2))),
alpha = 0.2,
color = muscle_color,
fill = muscle_color) +
geom_hline(yintercept = median2,
color = muscle_color) +
xlab("") +
scale_y_continuous(limits = c(0,1),
breaks = seq(0,1,0.25)) +
theme(axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.y = element_blank())
multiplotRow  <- plot_grid(plotPsis, pbrain, pmuscle, ncol = 3, align = "h")
multiplot     <- plot_grid(volcanoInd, multiplotRow, nrow = 2)
multiplot
rownames(diffTable)[i]
rownames(diffTable)[i] %in% eventsOI
setwd("~/git_repos/paper_intronic_benchmark/")
list_files <- list(branchpoint = 'data/splicing_altering/per_category/branchpoint_associated/statistics_all_types_all.tsv',
pe_new_donor = 'data/splicing_altering/per_category/pseudoexon_activation/new_donor/statistics_all_types_all.tsv',
pe_donor_downstream = 'data/splicing_altering/per_category/pseudoexon_activation/donor_downstream/statistics_all_types_all.tsv',
pe_acceptor_associated = 'data/splicing_altering/per_category/pseudoexon_activation/acceptor_associated/statistics_all_types_all.tsv',
pe_sre  = 'data/splicing_altering/per_category/pseudoexon_activation/sre_associated/statistics_all_types_all.tsv',
partial_ir_new_donor = 'data/splicing_altering/per_category/partial_intron_retention/new_donor/statistics_all_types_all.tsv',
partial_ir_donor_downstream = 'data/splicing_altering/per_category/partial_intron_retention/donor_downstream/statistics_all_types_all.tsv',
partial_ir_acceptor_associated = 'data/splicing_altering/per_category/partial_intron_retention/acceptor_associated/statistics_all_types_all.tsv',
partial_ir_sre = 'data/splicing_altering/per_category/partial_intron_retention/sre_associated/statistics_all_types_all.tsv')
# Concatenate dzata
df <- map2_df(list_files,
names(list_files),
~read_tsv(.x) %>%
mutate(analysis = .y) %>%
select(c('tool', 'norm_mcc', 'weighted_norm_mcc', 'weighted_F1', 'total_p', 'total_n',
'fraction_nan', 'weighted_accuracy', 'auROC', 'pr_auROC', 'analysis')))
library(ggplot2)
library(RColorBrewer)
library(readr)
library(dplyr)
library(tidyr)
library(purrr)
library(tibble)
library(stringr)
library(ggbump)
library(forcats)
setwd("~/git_repos/paper_intronic_benchmark/")
list_files <- list(branchpoint = 'data/splicing_altering/per_category/branchpoint_associated/statistics_all_types_all.tsv',
pe_new_donor = 'data/splicing_altering/per_category/pseudoexon_activation/new_donor/statistics_all_types_all.tsv',
pe_donor_downstream = 'data/splicing_altering/per_category/pseudoexon_activation/donor_downstream/statistics_all_types_all.tsv',
pe_acceptor_associated = 'data/splicing_altering/per_category/pseudoexon_activation/acceptor_associated/statistics_all_types_all.tsv',
pe_sre  = 'data/splicing_altering/per_category/pseudoexon_activation/sre_associated/statistics_all_types_all.tsv',
partial_ir_new_donor = 'data/splicing_altering/per_category/partial_intron_retention/new_donor/statistics_all_types_all.tsv',
partial_ir_donor_downstream = 'data/splicing_altering/per_category/partial_intron_retention/donor_downstream/statistics_all_types_all.tsv',
partial_ir_acceptor_associated = 'data/splicing_altering/per_category/partial_intron_retention/acceptor_associated/statistics_all_types_all.tsv',
partial_ir_sre = 'data/splicing_altering/per_category/partial_intron_retention/sre_associated/statistics_all_types_all.tsv')
# Concatenate dzata
df <- map2_df(list_files,
names(list_files),
~read_tsv(.x) %>%
mutate(analysis = .y) %>%
select(c('tool', 'norm_mcc', 'weighted_norm_mcc', 'weighted_F1', 'total_p', 'total_n',
'fraction_nan', 'weighted_accuracy', 'auROC', 'pr_auROC', 'analysis')))
to_heatmap <- df
df <- df %>% drop_na()
df$analysis <- factor(df$analysis, levels = c("branchpoint", "pe_acceptor_associated", "pe_sre", "pe_new_donor", "pe_donor_downstream",
"partial_ir_acceptor_associated", "partial_ir_sre", "partial_ir_new_donor", "partial_ir_donor_downstream"))
####################################
########## Per class boxplot #######
####################################
major_label_f <- function(x){
if (grepl("acceptor", x)){
return("Acceptor associated")
}
else if (grepl("sre", x)){
return("Splicing regulatory elements")
}
else if (grepl("new_donor", x)){
return("New splice donor")
}
else if (grepl("donor_downstream",x )){
return("Donor downstream")
}
}
pe <- df %>% filter(str_detect(analysis, "pe_"))
pe$group <- 'Pseudoexon activation'
pe$major_group <- sapply(pe$analysis, major_label_f)
partial_ir <- df %>% filter(str_detect(analysis, "partial_ir_"))
partial_ir$group <- 'Partial intron retention'
partial_ir$major_group <- sapply(partial_ir$analysis, major_label_f)
df <- bind_rows(pe, partial_ir)
ggplot(df %>% filter(analysis != "branchpoint"), aes(x=group, y=pr_auROC,fill=group)) +
geom_boxplot(alpha=0.5) +
geom_point() +
facet_wrap(~major_group) +
theme_bw() +
theme(legend.title=element_blank(),
axis.text.y = element_text(size=11),
axis.text.x = element_blank(),
axis.title.y = element_text(size=11),
axis.line = element_line(colour = "black"),
panel.background = element_blank(),
strip.text.x = element_text(size = 10, colour = "black"),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1) +
labs(x = '', y = 'Average Precision')
ggplot(df, aes(x=reorder(tool, -pr_auROC, median), y=pr_auROC, fill = group)) +
geom_boxplot(alpha=0.5, outlier.colour = NULL) +
#geom_point(shape = 21) +
theme_bw() +
theme(legend.title=element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(size=12, angle = 75),
axis.title.y = element_text(size=12),
axis.line = element_line(colour = "black"),
panel.background = element_blank(),
legend.text = element_text(size=12)) +
ylim(0.2, 1) +
labs(x = '', y = 'Average Precision')
#####################################
########   All categories  ##########
#####################################
# Keep only tools that predict all categories
pe_all <- pe %>%
group_by(tool) %>%
filter(n() >= 4)
partial_ir_all <- partial_ir %>%
group_by(tool) %>%
filter(n() >= 4 & tool != "MMSplice")
pe_all$tool = factor(pe_all$tool, levels = df %>% filter(analysis == "pe_acceptor_associated") %>% arrange(-pr_auROC) %>% pull(tool))
labels_pe <- c(paste0("Acceptor associated\nN pos=",
pe_all %>% filter(analysis == "pe_acceptor_associated") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_acceptor_associated") %>% pull(total_n) %>% first()),
paste0("Exonic-like SRE\nN pos=",
pe_all %>% filter(analysis == "pe_sre") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_sre") %>% pull(total_n) %>% first()),
paste0("New splice donor\nN pos=",
pe_all %>% filter(analysis == "pe_new_donor") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_new_donor") %>% pull(total_n) %>% first()),
paste0("Donor downstream\nN pos=",
pe_all %>% filter(analysis == "pe_donor_downstream") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_donor_downstream") %>% pull(total_n) %>% first()))
labels_partial_ir <- c(paste0("Acceptor associated\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_acceptor_associated") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_acceptor_associated") %>% pull(total_n) %>% first()),
paste0("Exonic-like SRE\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_sre") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_sre") %>% pull(total_n) %>% first()),
paste0("New splice donor\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_new_donor") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_new_donor") %>% pull(total_n) %>% first()),
paste0("Donor associated\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_donor_downstream") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_donor_downstream") %>% pull(total_n) %>% first()))
label_map <- tibble(analysis=c("pe_acceptor_associated",
"pe_sre",
"pe_new_donor",
"pe_donor_downstream",
"partial_ir_acceptor_associated",
"partial_ir_sre",
"partial_ir_new_donor",
"partial_ir_donor_downstream"),
label=c(labels_pe, labels_partial_ir))
pal <- c("#B15928", "#377EB8", "#E5D8BD", "#FBB4AE", "#E7298A", "#984EA3", "#7dc99e", "#999999")
all <- bind_rows(pe_all, partial_ir_all)
all <- left_join(all, label_map)
all$tool <- factor(all$tool, levels = all %>% filter(analysis == "pe_acceptor_associated") %>% arrange(-pr_auROC) %>% pull(tool))
all$label <- factor(all$label, levels = c(labels_pe, labels_partial_ir))
all$group <- factor(all$group, levels=c('Pseudoexon activation','Partial intron retention'))
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 2, alpha = 1) +
geom_point(size=5, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=10),
axis.title.y = element_text(size=14),
strip.text.x = element_text(size = 14),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.5, alpha = 1) +
geom_point(size=4, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=10),
axis.title.y = element_text(size=14),
strip.text.x = element_text(size = 14),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
all$group <- factor(all$group, levels=c('Pseudoexon activation','Partial intron retention'))
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.5, alpha = 1) +
geom_point(size=4, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=12),
axis.title.y = element_text(size=15),
strip.text.x = element_text(size = 15),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.5, alpha = 1) +
geom_point(size=4, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=12),
axis.title.y = element_text(size=15),
strip.text.x = element_text(size = 18),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.5, alpha = 1) +
geom_point(size=4, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=13),
axis.title.y = element_text(size=15),
strip.text.x = element_text(size = 17),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
labels_pe <- c(paste0("Acceptor associated\nN pos=",
pe_all %>% filter(analysis == "pe_acceptor_associated") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_acceptor_associated") %>% pull(total_n) %>% first()),
paste0("Exonic-like\nN pos=",
pe_all %>% filter(analysis == "pe_sre") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_sre") %>% pull(total_n) %>% first()),
paste0("New splice donor\nN pos=",
pe_all %>% filter(analysis == "pe_new_donor") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_new_donor") %>% pull(total_n) %>% first()),
paste0("Donor downstream\nN pos=",
pe_all %>% filter(analysis == "pe_donor_downstream") %>% pull(total_p) %>% first(),
";\nN neg=",
pe_all %>% filter(analysis == "pe_donor_downstream") %>% pull(total_n) %>% first()))
labels_partial_ir <- c(paste0("Acceptor associated\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_acceptor_associated") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_acceptor_associated") %>% pull(total_n) %>% first()),
paste0("Exonic-like\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_sre") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_sre") %>% pull(total_n) %>% first()),
paste0("New splice donor\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_new_donor") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_new_donor") %>% pull(total_n) %>% first()),
paste0("Donor associated\nN pos=",
partial_ir_all %>% filter(analysis == "partial_ir_donor_downstream") %>% pull(total_p) %>% first(),
";\nN neg=",
partial_ir_all %>% filter(analysis == "partial_ir_donor_downstream") %>% pull(total_n) %>% first()))
label_map <- tibble(analysis=c("pe_acceptor_associated",
"pe_sre",
"pe_new_donor",
"pe_donor_downstream",
"partial_ir_acceptor_associated",
"partial_ir_sre",
"partial_ir_new_donor",
"partial_ir_donor_downstream"),
label=c(labels_pe, labels_partial_ir))
pal <- c("#B15928", "#377EB8", "#E5D8BD", "#FBB4AE", "#E7298A", "#984EA3", "#7dc99e", "#999999")
all <- bind_rows(pe_all, partial_ir_all)
all <- left_join(all, label_map)
all$tool <- factor(all$tool, levels = all %>% filter(analysis == "pe_acceptor_associated") %>% arrange(-pr_auROC) %>% pull(tool))
all$label <- factor(all$label, levels = c(labels_pe, labels_partial_ir))
all$group <- factor(all$group, levels=c('Pseudoexon activation','Partial intron retention'))
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.5, alpha = 1) +
geom_point(size=4, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=13),
axis.title.y = element_text(size=15),
strip.text.x = element_text(size = 17),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
all$group <- factor(all$group, levels=c('Pseudoexon activation','Partial intron retention'))
ggplot(all, aes(x=label, y=pr_auROC, group=tool, color =tool)) +
geom_bump(smooth = 15, size = 1.2, alpha = 1) +
geom_point(size=5, position = position_dodge(0.15)) +
scale_color_manual(values = pal) +
facet_grid(~group, scales = "free_x") +
labs(x = '', y = "Average precision") +
#scale_x_discrete(labels = c(labels_pe, labels_partial_ir)) +
theme_bw() +
theme(legend.title=element_blank(),
legend.position = c(0.5, 0.6),
axis.text.y = element_text(size=13),
axis.text.x = element_text(size=13),
axis.title.y = element_text(size=15),
strip.text.x = element_text(size = 17),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(5, "lines"),
panel.background = element_blank(),
plot.title = element_text(size=15, hjust = 0.5),
legend.text = element_text(size=12)) +
ylim(0.2, 1)
